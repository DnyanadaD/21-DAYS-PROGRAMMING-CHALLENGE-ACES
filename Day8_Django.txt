Template System:-
Django makes it possible to separate python and HTML, the python goes in views and HTML goes in templates. 
To link the two, Django relies on the render function and the Django Template language.

The Render Function
This function takes three parameters −
  Request − The initial request.
  The path to the template − This is the path relative to the TEMPLATE_DIRS option in the project settings.py variables.
  Dictionary of parameters − A dictionary that contains all variables needed in the template. 
                             This variable can be created or you can use locals() 
                             to pass all local variable declared in the view.

Django Template Language (DTL):-
Django’s template engine offers a mini-language to define the user-facing layer of the application.

Displaying Variables:-
A variable looks like this: {{variable}}. 
The template replaces the variable by the variable sent by the view in the third parameter of the render function. 
Let's change our hello.html to display today’s date −
----------------------------------------------------------
hello.html
   <html>
   <body>
      Hello World!!!<p>Today is {{today}}</p>
   </body>
   </html>
-----------------------------------------------------------
Then our view will change to −

def hello(request):
   today = datetime.datetime.now().date()
   return render(request, "hello.html", {"today" : today})

------------------------------------------------------------
We will now get the following output after accessing the URL/myapp/hello −

Hello World!!!
Today is Oct. 12, 2020
------------------------------------------------------------
If the variable is not a string, Django will use the __str__ method to display it; 
and with the same principle we can access an object attribute just like we do it in Python. 
For example: if we wanted to display the date year, our variable would be: {{today.year}}.